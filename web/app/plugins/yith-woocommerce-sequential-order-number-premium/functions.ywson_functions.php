<?php
if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

if ( ! function_exists( 'ywson_is_raq_active' ) ) {
	/**
	 * check if YITH WooCommerce Request a quote premium is active
	 * @return bool
	 * @since 1.0.0
	 * @author Salvatore Strano
	 */
	function ywson_is_raq_active() {

		$is_quote_active = ( defined( 'YITH_YWRAQ_PREMIUM' ) && ( version_compare( YITH_YWRAQ_VERSION, '1.5.7', '>=' ) ) );

		return $is_quote_active;

	}
}

if ( ! function_exists( 'ywson_get_order_with_custom_order_number' ) ) {

	/**
	 * Add query args to get all orders with sequential order number generated by WooCommerce Sequential Order Numbers
	 *
	 * @param array $query
	 * @param array $query_args
	 *
	 * @return array
	 * @since 1.1.0
	 * @hook woocommerce_order_data_store_cpt_get_orders_query
	 *
	 * @author Salvatore Strano
	 */
	function ywson_get_order_with_custom_order_number( $query, $query_args ) {


		if ( isset( $query_args['_ywson_custom_number_order_complete'] ) ) {
			$query['meta_query'] = array(

				array(
					'key'     => '_ywson_custom_number_order_complete',
					'compare' => 'NOT EXISTS'
				),

			);
		}


		return $query;
	}
}

if ( ! function_exists( 'ywson_get_order_id_by_order_number' ) ) {
	/**
	 * get order id by custom order number
	 *
	 * @param string $order_number
	 *
	 * @return bool|string
	 */
	function ywson_get_order_id_by_order_number( $order_number ) {

		global $wpdb;
		$plugin_meta = array(
			'basic' => '_ywson_custom_number_order_complete',
			'free'  => '_ywson_custom_number_order_complete',
			'quote' => 'ywson_custom_quote_number_order'
		);
		foreach ( $plugin_meta as $key => $meta_key ) {
			$query  = $wpdb->prepare( "SELECT post_id FROM {$wpdb->postmeta}
										  WHERE {$wpdb->postmeta}.meta_key = %s AND {$wpdb->postmeta}.meta_value = %s LIMIT 1", $meta_key, $order_number );
			$result = $wpdb->get_var( $query );

			if ( ! empty( $result ) ) {
				break;
			}
		}

		return empty( $result ) ? false : $result;
	}
}

if ( ! function_exists( 'ywson_update_plugin_option_1_2' ) ) {

	function ywson_update_plugin_option_1_2() {

		$db_version = get_option( 'ywson_db_version', '1.0.0' );

		if ( version_compare( $db_version, '1.2.0', '<' ) ) {

			$enabled_base_module = get_option( 'ywson_enable_base_module', 'yes' );
			$start_order_number  = get_option( 'ywson_start_order_number', 1 );
			$order_prefix        = get_option( 'ywson_order_prefix', '' );
			$order_suffix        = get_option( 'ywson_order_suffix', '' );

			$base_module = array(
				'enabled'      => yith_plugin_fw_is_true( $enabled_base_module ) ? 'yes' : 'no',
				'order_number' => $start_order_number,
				'order_prefix' => $order_prefix,
				'order_suffix' => $order_suffix
			);


			$enabled_free_module     = get_option( 'ywson_check_custom_free_order', 'no' );
			$start_free_order_number = get_option( 'ywson_start_free_order_number', 1 );
			$free_order_prefix       = get_option( 'ywson_free_order_prefix', '' );
			$free_order_suffix       = get_option( 'ywson_free_order_suffix', '' );
			$free_order_type         = get_option( 'ywson_free_order_type', 'order_tot' );


			$free_module = array(
				'enabled'      => yith_plugin_fw_is_true( $enabled_free_module ) ? 'yes' : 'no',
				'order_number' => $start_free_order_number,
				'order_prefix' => $free_order_prefix,
				'order_suffix' => $free_order_suffix,
				'order_type'   => $free_order_type
			);

			$enabled_quote_module     = get_option( 'ywson_check_custom_quote_order', 'no' );
			$start_quote_order_number = get_option( 'ywson_start_quote_order_number', 1 );
			$quote_order_prefix       = get_option( 'ywson_quote_order_prefix', '' );
			$quote_order_suffix       = get_option( 'ywson_quote_order_suffix', '' );
			$quote_module             = array(
				'enabled'      => yith_plugin_fw_is_true( $enabled_quote_module ) ? 'yes' : 'no',
				'order_number' => $start_quote_order_number,
				'order_prefix' => $quote_order_prefix,
				'order_suffix' => $quote_order_suffix,

			);

			$create_options = array(
				'ywson_base_module_settings'  => $base_module,
				'ywson_free_module_settings'  => $free_module,
				'ywson_quote_module_settings' => $quote_module
			);

			$old_options = array(
				'ywson_enable_base_module' => $enabled_base_module,
				'ywson_start_order_number' => $start_order_number,
				'ywson_order_prefix' => $order_prefix,
				'ywson_order_suffix' => $order_suffix,
				'ywson_check_custom_free_order' => $enabled_free_module,
				'ywson_start_free_order_number' => $start_free_order_number,
				'ywson_free_order_prefix' => $free_order_prefix,
				'ywson_free_order_suffix' => $free_order_suffix,
				'ywson_free_order_type' => $free_order_type,
				'ywson_check_custom_quote_order' => $enabled_quote_module,
				'ywson_start_quote_order_number' => $start_quote_order_number,
				'ywson_quote_order_prefix' => $quote_order_prefix,
				'ywson_quote_order_suffix' => $quote_order_suffix

			);

			//Add new options
			foreach( $create_options as $option_name => $value ){
				add_option( $option_name, $value );
			}

			//Delete old options
			foreach ( $old_options as $old_option_name => $old_value ){
				delete_option($old_option_name);
			}

			update_option('ywson_old_option_backup', $old_options );
			update_option( 'ywson_db_version', '1.2.0' );
		}
	}
}
add_action( 'admin_init', 'ywson_update_plugin_option_1_2', 20 );


if ( ! function_exists( 'ywson_is_subscription_active' ) ) {
	/**
	 * check if YITH WooCommerce Subscription premium is active
	 * @return bool
	 * @author Emanuela Castorina
	 * @since  1.2.7
	 */
	function ywson_is_subscription_active() {
		return ( defined( 'YITH_YWSBS_PREMIUM' ) && ( version_compare( YITH_YWSBS_VERSION, '2.2.0', '>=' ) ) );
	}
}